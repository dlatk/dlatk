.. _fwflag_model:
=======
--model
=======
Switch
======

--model

Description
===========

Model to use when predicting or clustering

Argument and Default Value
==========================

There is no default model when using --fit_reducer. For everything else, default model is ridgecv.

Details
=======

This switched is used with the following: 
:doc:`fwflag_train_regression` :doc:`fwflag_test_regression` :doc:`fwflag_combo_test_regression` :doc:`fwflag_predict_regression` 
:doc:`fwflag_predict_regression_to_feats` :doc:`fwflag_predict_cv_to_feats`? :doc:`fwflag_predict_combo_to_feats`? :doc:`fwflag_predict_regression_all_to_feats`? :doc:`fwflag_regression_to_lexicon` :doc:`fwflag_train_regression` :doc:`fwflag_test_combined_regression`? :doc:`fwflag_train_classifiers` :doc:`fwflag_test_classifiers` :doc:`fwflag_combo_test_classifiers` :doc:`fwflag_predict_classifiers` :doc:`fwflag_predict_class` ?
:doc:`fwflag_predict_classifiers_to_feats` :doc:`fwflag_classification_to_lexicon` :doc:`fwflag_roc` :doc:`fwflag_train_c2`? :doc:`fwflag_test_c2r`? :doc:`fwflag_predict_c2r`? Using :doc:`fwflag_fit_reducer` one can specify the following clustering algorithms:
NMF - Non:doc:`fwflag_Negative` matrix factorization by Projected Gradient (NMF)
PCA - (Principal component analysis) Linear dimensionality reduction using Singular Value Decomposition of the data and keeping only the most significant singular vectors to project the data to a lower dimensional space.
SPARSEPCA - (Sparse Principal Components Analysis) Finds the set of sparse components that can optimally reconstruct the data. The amount of sparseness is controllable by the coefficient of the L1 penalty.
LDA - (Linear Discriminant Analysis) A classifier with a linear decision boundary, generated by fitting class conditional densities to the data and using Bayesâ€™ rule.
KMEANS - K:doc:`fwflag_Means` clustering
DBSCAN - (Density:doc:`fwflag_Based` Spatial Clustering of Applications with Noise) Finds core samples of high density and expands clusters from them. Good for data which contains clusters of similar density.
SPECTRAL - Apply clustering to a projection to the normalized laplacian. In practice Spectral Clustering is very useful when the structure of the individual clusters is highly non:doc:`fwflag_convex` or more generally when a measure of the center and spread of the cluster is not a suitable description of the complete cluster. For instance when clusters are nested circles on the 2D plan.
GMM - (Gaussian Mixture Model)

Other Switches
==============

Optional Switches:
:doc:`fwflag_n_components` N
:doc:`fwflag_group_freq_thresh` GROUP_THRESH
:doc:`fwflag_save_models`? :doc:`fwflag_load_models`? :doc:`fwflag_picklefile` FILE_NAME
:doc:`fwflag_sparse` :doc:`fwflag_no_standardize` 
Example Commands
================
.. code:doc:`fwflag_block`:: python


 # General syntax
 ./fwInterface.py :doc:`fwflag_d` <DATABASE> :doc:`fwflag_t` <TABLE> :doc:`fwflag_c` <> :doc:`fwflag_f` <FEATURE_TABLE> :doc:`fwflag_fit_reducer` :doc:`fwflag_model` <MODEL_NAME> 

 # Example command
 ./fwInterface.py :doc:`fwflag_d` primals :doc:`fwflag_t` primals_new :doc:`fwflag_c` dp_id :doc:`fwflag_f` 'feat$1to3gram$primals_new$dp_id$16to1$0_0001' :doc:`fwflag_fit_reducer` :doc:`fwflag_model` spectral :doc:`fwflag_group_freq_thresh` 100
